// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VP_V2.Data;

#nullable disable

namespace VP_V2.Migrations
{
    [DbContext(typeof(VP_DBcontext))]
    [Migration("20230612195526_CargaDatosProvincias")]
    partial class CargaDatosProvincias
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VP_V2.Models.Cliente", b =>
                {
                    b.Property<int>("IdCli")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCli"));

                    b.Property<string>("Ape")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Cod_Tel")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Dni")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("Fecha_Baja")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LocalidadIdLoc")
                        .HasColumnType("int");

                    b.Property<string>("Mail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Tel")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("IdCli");

                    b.HasIndex("LocalidadIdLoc");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("VP_V2.Models.Localidade", b =>
                {
                    b.Property<int>("IdLoc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLoc"));

                    b.Property<string>("Cod_Postal")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Nom_Ciudad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ProvinciaIdProv")
                        .HasColumnType("int");

                    b.HasKey("IdLoc");

                    b.HasIndex("ProvinciaIdProv");

                    b.ToTable("Localidades");
                });

            modelBuilder.Entity("VP_V2.Models.Producto", b =>
                {
                    b.Property<int>("IdProd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProd"));

                    b.Property<string>("Desc_Prod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Fecha_Baja")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Precio_Costo")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("Precio_Venta")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("IdProd");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("VP_V2.Models.Provincia", b =>
                {
                    b.Property<int>("IdProv")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProv"));

                    b.Property<string>("Nom_Prov")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdProv");

                    b.ToTable("Provincias");

                    b.HasData(
                        new
                        {
                            IdProv = 55,
                            Nom_Prov = "Buenos Aires"
                        },
                        new
                        {
                            IdProv = 56,
                            Nom_Prov = "Catamarca"
                        },
                        new
                        {
                            IdProv = 57,
                            Nom_Prov = "Chaco"
                        },
                        new
                        {
                            IdProv = 58,
                            Nom_Prov = "Chubut"
                        },
                        new
                        {
                            IdProv = 59,
                            Nom_Prov = "Cordoba"
                        },
                        new
                        {
                            IdProv = 60,
                            Nom_Prov = "Corrientes"
                        },
                        new
                        {
                            IdProv = 61,
                            Nom_Prov = "Entre Rios"
                        },
                        new
                        {
                            IdProv = 62,
                            Nom_Prov = "Formosa"
                        },
                        new
                        {
                            IdProv = 63,
                            Nom_Prov = "Jujuy"
                        },
                        new
                        {
                            IdProv = 64,
                            Nom_Prov = "La Pampa"
                        },
                        new
                        {
                            IdProv = 65,
                            Nom_Prov = "La Rioja"
                        },
                        new
                        {
                            IdProv = 66,
                            Nom_Prov = "Mendoza"
                        },
                        new
                        {
                            IdProv = 67,
                            Nom_Prov = "Misiones"
                        },
                        new
                        {
                            IdProv = 68,
                            Nom_Prov = "Neuquen"
                        },
                        new
                        {
                            IdProv = 69,
                            Nom_Prov = "Rio Negro"
                        },
                        new
                        {
                            IdProv = 70,
                            Nom_Prov = "Salta"
                        },
                        new
                        {
                            IdProv = 71,
                            Nom_Prov = "San Juan"
                        },
                        new
                        {
                            IdProv = 72,
                            Nom_Prov = "San Luis"
                        },
                        new
                        {
                            IdProv = 73,
                            Nom_Prov = "Santa Cruz"
                        },
                        new
                        {
                            IdProv = 74,
                            Nom_Prov = "Santa Fe"
                        },
                        new
                        {
                            IdProv = 75,
                            Nom_Prov = "Santiago del Estero"
                        },
                        new
                        {
                            IdProv = 76,
                            Nom_Prov = "Tierra del Fuego"
                        },
                        new
                        {
                            IdProv = 77,
                            Nom_Prov = "Tucuman"
                        },
                        new
                        {
                            IdProv = 78,
                            Nom_Prov = "Capital Federal"
                        });
                });

            modelBuilder.Entity("VP_V2.Models.Usuario", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"));

                    b.Property<int?>("ClienteIdCli")
                        .HasColumnType("int");

                    b.Property<string>("Pass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdUser");

                    b.HasIndex("ClienteIdCli");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("VP_V2.Models.Cliente", b =>
                {
                    b.HasOne("VP_V2.Models.Localidade", "Localidad")
                        .WithMany()
                        .HasForeignKey("LocalidadIdLoc");

                    b.Navigation("Localidad");
                });

            modelBuilder.Entity("VP_V2.Models.Localidade", b =>
                {
                    b.HasOne("VP_V2.Models.Provincia", "Provincia")
                        .WithMany()
                        .HasForeignKey("ProvinciaIdProv")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("VP_V2.Models.Usuario", b =>
                {
                    b.HasOne("VP_V2.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteIdCli");

                    b.Navigation("Cliente");
                });
#pragma warning restore 612, 618
        }
    }
}
